vagrant-swift-all-in-one on AWS
========================

Host setup or installations

1. Log into an AWS account
2. Go to EC2
4. Go to keypairs section, and generate a new keypair. The private key will download. Chmod it to 400, and keep it somewhere
5. Go to security groups section, and create a security group. The rules are up to you. We restricted inbound traffic to
   only allow our office's public IP, and our CI server's IP.
6. Use existing / create new IAM credentials that have the permission to provision VMs. If you're a Nvidia user you can use your
   credentials from the Nvidia security portal or use `nvwrapit`.
7. set up your environment as shown below, using resources you have just created on AWS. Note `VAGRANT_BOX=dummy` is to prevent a virtualbox disk image being downloaded when it is not needed. Also note the below example is for us-west-2 region, and to switch region you will need the AMI ID of the [ubuntu AMI](https://us-west-2.console.aws.amazon.com/ec2/v2/home?region=us-west-2#Images:visibility=public-images;imageId=ami-0ee8244746ec5d6d4) for your nearest region.
8. Install vagrant aws [plugin](https://github.com/mitchellh/vagrant-aws). `vagrant plugin install vagrant-aws`
9. `vagrant up --provider aws`

All the environment variables you would need in your `~/.localrc` file before you run step 9)

```
export AWS_ACCESS_KEY_ID=...
export AWS_SECRET_ACCESS_KEY=...
export AWS_SESSION_TOKEN=...
export SSH_PRIVATE_KEY_PATH="$HOME/.ssh/id_rsa""
export AWS_REGION="us-west-2"
export AWS_AMI="ami-0ee8244746ec5d6d4" # or whatever ami you want your instance to use
export AWS_INSTANCE_TYPE="m3.medium"
export AWS_ELASTIC_IP=true
export AWS_KEYPAIR_NAME="ashnair-key-pair" # pem format of your ssh-key pair
export AWS_SECURITY_GROUPS="launch-wizard-2" # name of the security group you want your instance to have (ssh-only)
export VAGRANT_BOX=dummy
export VAGRANT_DEFAULT_PROVIDER="aws" # reference to VAGRANT_DEFAULT_PROVIDER somewhere, if you wanna set a default provider
export VAGRANT_USERNAME="ubuntu" # or whatever other username you want it to be
```

*NOTE:* After your instance has been provisioned and is ssh reachable, you can follow the steps mentioned [here](https://github.com/NVIDIA/vagrant-swift-all-in-one#running-tests).
It is important to note that you might have to `tox -e py38` so it can run all your unittests, functional tests, etc. in a
supported python virtual environment.

Issues
======

The vagrant-aws provider is [unmaintained](https://github.com/mitchellh/vagrant-aws/issues/579#issuecomment-1035517879)

During `vagrant destroy` I see this error:

```
InvalidParameterValue => You must specify an association id when unmapping an address from a VPC instance (Fog::Compute::AWS::Error)
```

I have to remove the AWS Elastic IP "by hand" using the web console, then clear out the vagrant state:

```
cat .vagrant/machines/default/aws/elastic_ip
# delete the ip
rm !$
nvwrapit vagrant destroy
```
